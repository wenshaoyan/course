//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var bean_ttypes = require('./bean_types');


var ttypes = require('./service_types');
//HELPER FUNCTIONS AND STRUCTURES

var CommonService_topicOptionInsert_args = function(args) {
  this.topicOption = null;
  if (args) {
    if (args.topicOption !== undefined && args.topicOption !== null) {
      this.topicOption = new bean_ttypes.TopicOption(args.topicOption);
    }
  }
};
CommonService_topicOptionInsert_args.prototype = {};
CommonService_topicOptionInsert_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.topicOption = new bean_ttypes.TopicOption();
        this.topicOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicOptionInsert_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicOptionInsert_args');
  if (this.topicOption !== null && this.topicOption !== undefined) {
    output.writeFieldBegin('topicOption', Thrift.Type.STRUCT, 1);
    this.topicOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicOptionInsert_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
CommonService_topicOptionInsert_result.prototype = {};
CommonService_topicOptionInsert_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicOptionInsert_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicOptionInsert_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicOptionUpdate_args = function(args) {
  this.topicOption = null;
  if (args) {
    if (args.topicOption !== undefined && args.topicOption !== null) {
      this.topicOption = new bean_ttypes.TopicOption(args.topicOption);
    }
  }
};
CommonService_topicOptionUpdate_args.prototype = {};
CommonService_topicOptionUpdate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.topicOption = new bean_ttypes.TopicOption();
        this.topicOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicOptionUpdate_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicOptionUpdate_args');
  if (this.topicOption !== null && this.topicOption !== undefined) {
    output.writeFieldBegin('topicOption', Thrift.Type.STRUCT, 1);
    this.topicOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicOptionUpdate_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
CommonService_topicOptionUpdate_result.prototype = {};
CommonService_topicOptionUpdate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicOptionUpdate_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicOptionUpdate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicOptionRemove_args = function(args) {
  this.topicOption = null;
  if (args) {
    if (args.topicOption !== undefined && args.topicOption !== null) {
      this.topicOption = new bean_ttypes.TopicOption(args.topicOption);
    }
  }
};
CommonService_topicOptionRemove_args.prototype = {};
CommonService_topicOptionRemove_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.topicOption = new bean_ttypes.TopicOption();
        this.topicOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicOptionRemove_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicOptionRemove_args');
  if (this.topicOption !== null && this.topicOption !== undefined) {
    output.writeFieldBegin('topicOption', Thrift.Type.STRUCT, 1);
    this.topicOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicOptionRemove_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
CommonService_topicOptionRemove_result.prototype = {};
CommonService_topicOptionRemove_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicOptionRemove_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicOptionRemove_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicOptionSelect_args = function(args) {
  this.abstractSql = null;
  if (args) {
    if (args.abstractSql !== undefined && args.abstractSql !== null) {
      this.abstractSql = new bean_ttypes.AbstractSql(args.abstractSql);
    }
  }
};
CommonService_topicOptionSelect_args.prototype = {};
CommonService_topicOptionSelect_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.abstractSql = new bean_ttypes.AbstractSql();
        this.abstractSql.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicOptionSelect_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicOptionSelect_args');
  if (this.abstractSql !== null && this.abstractSql !== undefined) {
    output.writeFieldBegin('abstractSql', Thrift.Type.STRUCT, 1);
    this.abstractSql.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicOptionSelect_result = function(args) {
  this.success = null;
  this.re = null;
  if (args instanceof bean_ttypes.RequestException) {
    this.re = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [bean_ttypes.TopicOption]);
    }
    if (args.re !== undefined && args.re !== null) {
      this.re = args.re;
    }
  }
};
CommonService_topicOptionSelect_result.prototype = {};
CommonService_topicOptionSelect_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size232 = 0;
        var _rtmp3236;
        this.success = [];
        var _etype235 = 0;
        _rtmp3236 = input.readListBegin();
        _etype235 = _rtmp3236.etype;
        _size232 = _rtmp3236.size;
        for (var _i237 = 0; _i237 < _size232; ++_i237)
        {
          var elem238 = null;
          elem238 = new bean_ttypes.TopicOption();
          elem238.read(input);
          this.success.push(elem238);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.re = new bean_ttypes.RequestException();
        this.re.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicOptionSelect_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicOptionSelect_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter239 in this.success)
    {
      if (this.success.hasOwnProperty(iter239))
      {
        iter239 = this.success[iter239];
        iter239.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.re !== null && this.re !== undefined) {
    output.writeFieldBegin('re', Thrift.Type.STRUCT, 1);
    this.re.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicOptionSelectNoCache_args = function(args) {
  this.abstractSql = null;
  if (args) {
    if (args.abstractSql !== undefined && args.abstractSql !== null) {
      this.abstractSql = new bean_ttypes.AbstractSql(args.abstractSql);
    }
  }
};
CommonService_topicOptionSelectNoCache_args.prototype = {};
CommonService_topicOptionSelectNoCache_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.abstractSql = new bean_ttypes.AbstractSql();
        this.abstractSql.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicOptionSelectNoCache_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicOptionSelectNoCache_args');
  if (this.abstractSql !== null && this.abstractSql !== undefined) {
    output.writeFieldBegin('abstractSql', Thrift.Type.STRUCT, 1);
    this.abstractSql.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicOptionSelectNoCache_result = function(args) {
  this.success = null;
  this.re = null;
  if (args instanceof bean_ttypes.RequestException) {
    this.re = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [bean_ttypes.TopicOption]);
    }
    if (args.re !== undefined && args.re !== null) {
      this.re = args.re;
    }
  }
};
CommonService_topicOptionSelectNoCache_result.prototype = {};
CommonService_topicOptionSelectNoCache_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size240 = 0;
        var _rtmp3244;
        this.success = [];
        var _etype243 = 0;
        _rtmp3244 = input.readListBegin();
        _etype243 = _rtmp3244.etype;
        _size240 = _rtmp3244.size;
        for (var _i245 = 0; _i245 < _size240; ++_i245)
        {
          var elem246 = null;
          elem246 = new bean_ttypes.TopicOption();
          elem246.read(input);
          this.success.push(elem246);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.re = new bean_ttypes.RequestException();
        this.re.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicOptionSelectNoCache_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicOptionSelectNoCache_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter247 in this.success)
    {
      if (this.success.hasOwnProperty(iter247))
      {
        iter247 = this.success[iter247];
        iter247.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.re !== null && this.re !== undefined) {
    output.writeFieldBegin('re', Thrift.Type.STRUCT, 1);
    this.re.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicInsert_args = function(args) {
  this.topic = null;
  if (args) {
    if (args.topic !== undefined && args.topic !== null) {
      this.topic = new bean_ttypes.Topic(args.topic);
    }
  }
};
CommonService_topicInsert_args.prototype = {};
CommonService_topicInsert_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.topic = new bean_ttypes.Topic();
        this.topic.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicInsert_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicInsert_args');
  if (this.topic !== null && this.topic !== undefined) {
    output.writeFieldBegin('topic', Thrift.Type.STRUCT, 1);
    this.topic.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicInsert_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
CommonService_topicInsert_result.prototype = {};
CommonService_topicInsert_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicInsert_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicInsert_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicUpdate_args = function(args) {
  this.topic = null;
  if (args) {
    if (args.topic !== undefined && args.topic !== null) {
      this.topic = new bean_ttypes.Topic(args.topic);
    }
  }
};
CommonService_topicUpdate_args.prototype = {};
CommonService_topicUpdate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.topic = new bean_ttypes.Topic();
        this.topic.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicUpdate_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicUpdate_args');
  if (this.topic !== null && this.topic !== undefined) {
    output.writeFieldBegin('topic', Thrift.Type.STRUCT, 1);
    this.topic.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicUpdate_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
CommonService_topicUpdate_result.prototype = {};
CommonService_topicUpdate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicUpdate_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicUpdate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicRemove_args = function(args) {
  this.topic = null;
  if (args) {
    if (args.topic !== undefined && args.topic !== null) {
      this.topic = new bean_ttypes.Topic(args.topic);
    }
  }
};
CommonService_topicRemove_args.prototype = {};
CommonService_topicRemove_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.topic = new bean_ttypes.Topic();
        this.topic.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicRemove_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicRemove_args');
  if (this.topic !== null && this.topic !== undefined) {
    output.writeFieldBegin('topic', Thrift.Type.STRUCT, 1);
    this.topic.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicRemove_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
CommonService_topicRemove_result.prototype = {};
CommonService_topicRemove_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicRemove_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicRemove_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicSelect_args = function(args) {
  this.abstractSql = null;
  if (args) {
    if (args.abstractSql !== undefined && args.abstractSql !== null) {
      this.abstractSql = new bean_ttypes.AbstractSql(args.abstractSql);
    }
  }
};
CommonService_topicSelect_args.prototype = {};
CommonService_topicSelect_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.abstractSql = new bean_ttypes.AbstractSql();
        this.abstractSql.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicSelect_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicSelect_args');
  if (this.abstractSql !== null && this.abstractSql !== undefined) {
    output.writeFieldBegin('abstractSql', Thrift.Type.STRUCT, 1);
    this.abstractSql.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicSelect_result = function(args) {
  this.success = null;
  this.re = null;
  if (args instanceof bean_ttypes.RequestException) {
    this.re = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [bean_ttypes.Topic]);
    }
    if (args.re !== undefined && args.re !== null) {
      this.re = args.re;
    }
  }
};
CommonService_topicSelect_result.prototype = {};
CommonService_topicSelect_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size248 = 0;
        var _rtmp3252;
        this.success = [];
        var _etype251 = 0;
        _rtmp3252 = input.readListBegin();
        _etype251 = _rtmp3252.etype;
        _size248 = _rtmp3252.size;
        for (var _i253 = 0; _i253 < _size248; ++_i253)
        {
          var elem254 = null;
          elem254 = new bean_ttypes.Topic();
          elem254.read(input);
          this.success.push(elem254);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.re = new bean_ttypes.RequestException();
        this.re.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicSelect_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicSelect_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter255 in this.success)
    {
      if (this.success.hasOwnProperty(iter255))
      {
        iter255 = this.success[iter255];
        iter255.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.re !== null && this.re !== undefined) {
    output.writeFieldBegin('re', Thrift.Type.STRUCT, 1);
    this.re.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicSelectNoCache_args = function(args) {
  this.abstractSql = null;
  if (args) {
    if (args.abstractSql !== undefined && args.abstractSql !== null) {
      this.abstractSql = new bean_ttypes.AbstractSql(args.abstractSql);
    }
  }
};
CommonService_topicSelectNoCache_args.prototype = {};
CommonService_topicSelectNoCache_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.abstractSql = new bean_ttypes.AbstractSql();
        this.abstractSql.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicSelectNoCache_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicSelectNoCache_args');
  if (this.abstractSql !== null && this.abstractSql !== undefined) {
    output.writeFieldBegin('abstractSql', Thrift.Type.STRUCT, 1);
    this.abstractSql.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicSelectNoCache_result = function(args) {
  this.success = null;
  this.re = null;
  if (args instanceof bean_ttypes.RequestException) {
    this.re = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [bean_ttypes.Topic]);
    }
    if (args.re !== undefined && args.re !== null) {
      this.re = args.re;
    }
  }
};
CommonService_topicSelectNoCache_result.prototype = {};
CommonService_topicSelectNoCache_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size256 = 0;
        var _rtmp3260;
        this.success = [];
        var _etype259 = 0;
        _rtmp3260 = input.readListBegin();
        _etype259 = _rtmp3260.etype;
        _size256 = _rtmp3260.size;
        for (var _i261 = 0; _i261 < _size256; ++_i261)
        {
          var elem262 = null;
          elem262 = new bean_ttypes.Topic();
          elem262.read(input);
          this.success.push(elem262);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.re = new bean_ttypes.RequestException();
        this.re.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicSelectNoCache_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicSelectNoCache_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter263 in this.success)
    {
      if (this.success.hasOwnProperty(iter263))
      {
        iter263 = this.success[iter263];
        iter263.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.re !== null && this.re !== undefined) {
    output.writeFieldBegin('re', Thrift.Type.STRUCT, 1);
    this.re.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicBankInsert_args = function(args) {
  this.topicBank = null;
  if (args) {
    if (args.topicBank !== undefined && args.topicBank !== null) {
      this.topicBank = new bean_ttypes.TopicBank(args.topicBank);
    }
  }
};
CommonService_topicBankInsert_args.prototype = {};
CommonService_topicBankInsert_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.topicBank = new bean_ttypes.TopicBank();
        this.topicBank.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicBankInsert_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicBankInsert_args');
  if (this.topicBank !== null && this.topicBank !== undefined) {
    output.writeFieldBegin('topicBank', Thrift.Type.STRUCT, 1);
    this.topicBank.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicBankInsert_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
CommonService_topicBankInsert_result.prototype = {};
CommonService_topicBankInsert_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicBankInsert_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicBankInsert_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicBankUpdate_args = function(args) {
  this.topicBank = null;
  if (args) {
    if (args.topicBank !== undefined && args.topicBank !== null) {
      this.topicBank = new bean_ttypes.TopicBank(args.topicBank);
    }
  }
};
CommonService_topicBankUpdate_args.prototype = {};
CommonService_topicBankUpdate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.topicBank = new bean_ttypes.TopicBank();
        this.topicBank.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicBankUpdate_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicBankUpdate_args');
  if (this.topicBank !== null && this.topicBank !== undefined) {
    output.writeFieldBegin('topicBank', Thrift.Type.STRUCT, 1);
    this.topicBank.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicBankUpdate_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
CommonService_topicBankUpdate_result.prototype = {};
CommonService_topicBankUpdate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicBankUpdate_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicBankUpdate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicBankRemove_args = function(args) {
  this.topicBank = null;
  if (args) {
    if (args.topicBank !== undefined && args.topicBank !== null) {
      this.topicBank = new bean_ttypes.TopicBank(args.topicBank);
    }
  }
};
CommonService_topicBankRemove_args.prototype = {};
CommonService_topicBankRemove_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.topicBank = new bean_ttypes.TopicBank();
        this.topicBank.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicBankRemove_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicBankRemove_args');
  if (this.topicBank !== null && this.topicBank !== undefined) {
    output.writeFieldBegin('topicBank', Thrift.Type.STRUCT, 1);
    this.topicBank.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicBankRemove_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
CommonService_topicBankRemove_result.prototype = {};
CommonService_topicBankRemove_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicBankRemove_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicBankRemove_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicBankSelect_args = function(args) {
  this.abstractSql = null;
  if (args) {
    if (args.abstractSql !== undefined && args.abstractSql !== null) {
      this.abstractSql = new bean_ttypes.AbstractSql(args.abstractSql);
    }
  }
};
CommonService_topicBankSelect_args.prototype = {};
CommonService_topicBankSelect_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.abstractSql = new bean_ttypes.AbstractSql();
        this.abstractSql.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicBankSelect_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicBankSelect_args');
  if (this.abstractSql !== null && this.abstractSql !== undefined) {
    output.writeFieldBegin('abstractSql', Thrift.Type.STRUCT, 1);
    this.abstractSql.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicBankSelect_result = function(args) {
  this.success = null;
  this.re = null;
  if (args instanceof bean_ttypes.RequestException) {
    this.re = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [bean_ttypes.TopicBank]);
    }
    if (args.re !== undefined && args.re !== null) {
      this.re = args.re;
    }
  }
};
CommonService_topicBankSelect_result.prototype = {};
CommonService_topicBankSelect_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size264 = 0;
        var _rtmp3268;
        this.success = [];
        var _etype267 = 0;
        _rtmp3268 = input.readListBegin();
        _etype267 = _rtmp3268.etype;
        _size264 = _rtmp3268.size;
        for (var _i269 = 0; _i269 < _size264; ++_i269)
        {
          var elem270 = null;
          elem270 = new bean_ttypes.TopicBank();
          elem270.read(input);
          this.success.push(elem270);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.re = new bean_ttypes.RequestException();
        this.re.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicBankSelect_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicBankSelect_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter271 in this.success)
    {
      if (this.success.hasOwnProperty(iter271))
      {
        iter271 = this.success[iter271];
        iter271.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.re !== null && this.re !== undefined) {
    output.writeFieldBegin('re', Thrift.Type.STRUCT, 1);
    this.re.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicBankSelectNoCache_args = function(args) {
  this.abstractSql = null;
  if (args) {
    if (args.abstractSql !== undefined && args.abstractSql !== null) {
      this.abstractSql = new bean_ttypes.AbstractSql(args.abstractSql);
    }
  }
};
CommonService_topicBankSelectNoCache_args.prototype = {};
CommonService_topicBankSelectNoCache_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.abstractSql = new bean_ttypes.AbstractSql();
        this.abstractSql.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicBankSelectNoCache_args.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicBankSelectNoCache_args');
  if (this.abstractSql !== null && this.abstractSql !== undefined) {
    output.writeFieldBegin('abstractSql', Thrift.Type.STRUCT, 1);
    this.abstractSql.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonService_topicBankSelectNoCache_result = function(args) {
  this.success = null;
  this.re = null;
  if (args instanceof bean_ttypes.RequestException) {
    this.re = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [bean_ttypes.TopicBank]);
    }
    if (args.re !== undefined && args.re !== null) {
      this.re = args.re;
    }
  }
};
CommonService_topicBankSelectNoCache_result.prototype = {};
CommonService_topicBankSelectNoCache_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size272 = 0;
        var _rtmp3276;
        this.success = [];
        var _etype275 = 0;
        _rtmp3276 = input.readListBegin();
        _etype275 = _rtmp3276.etype;
        _size272 = _rtmp3276.size;
        for (var _i277 = 0; _i277 < _size272; ++_i277)
        {
          var elem278 = null;
          elem278 = new bean_ttypes.TopicBank();
          elem278.read(input);
          this.success.push(elem278);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.re = new bean_ttypes.RequestException();
        this.re.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CommonService_topicBankSelectNoCache_result.prototype.write = function(output) {
  output.writeStructBegin('CommonService_topicBankSelectNoCache_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter279 in this.success)
    {
      if (this.success.hasOwnProperty(iter279))
      {
        iter279 = this.success[iter279];
        iter279.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.re !== null && this.re !== undefined) {
    output.writeFieldBegin('re', Thrift.Type.STRUCT, 1);
    this.re.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CommonServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
CommonServiceClient.prototype = {};
CommonServiceClient.prototype.seqid = function() { return this._seqid; };
CommonServiceClient.prototype.new_seqid = function() { return this._seqid += 1; };
CommonServiceClient.prototype.topicOptionInsert = function(topicOption, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicOptionInsert(topicOption);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicOptionInsert(topicOption);
  }
};

CommonServiceClient.prototype.send_topicOptionInsert = function(topicOption) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicOptionInsert', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicOptionInsert_args();
  args.topicOption = topicOption;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicOptionInsert = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicOptionInsert_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicOptionInsert failed: unknown result');
};
CommonServiceClient.prototype.topicOptionUpdate = function(topicOption, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicOptionUpdate(topicOption);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicOptionUpdate(topicOption);
  }
};

CommonServiceClient.prototype.send_topicOptionUpdate = function(topicOption) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicOptionUpdate', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicOptionUpdate_args();
  args.topicOption = topicOption;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicOptionUpdate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicOptionUpdate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicOptionUpdate failed: unknown result');
};
CommonServiceClient.prototype.topicOptionRemove = function(topicOption, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicOptionRemove(topicOption);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicOptionRemove(topicOption);
  }
};

CommonServiceClient.prototype.send_topicOptionRemove = function(topicOption) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicOptionRemove', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicOptionRemove_args();
  args.topicOption = topicOption;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicOptionRemove = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicOptionRemove_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicOptionRemove failed: unknown result');
};
CommonServiceClient.prototype.topicOptionSelect = function(abstractSql, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicOptionSelect(abstractSql);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicOptionSelect(abstractSql);
  }
};

CommonServiceClient.prototype.send_topicOptionSelect = function(abstractSql) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicOptionSelect', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicOptionSelect_args();
  args.abstractSql = abstractSql;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicOptionSelect = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicOptionSelect_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.re) {
    return callback(result.re);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicOptionSelect failed: unknown result');
};
CommonServiceClient.prototype.topicOptionSelectNoCache = function(abstractSql, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicOptionSelectNoCache(abstractSql);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicOptionSelectNoCache(abstractSql);
  }
};

CommonServiceClient.prototype.send_topicOptionSelectNoCache = function(abstractSql) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicOptionSelectNoCache', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicOptionSelectNoCache_args();
  args.abstractSql = abstractSql;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicOptionSelectNoCache = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicOptionSelectNoCache_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.re) {
    return callback(result.re);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicOptionSelectNoCache failed: unknown result');
};
CommonServiceClient.prototype.topicInsert = function(topic, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicInsert(topic);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicInsert(topic);
  }
};

CommonServiceClient.prototype.send_topicInsert = function(topic) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicInsert', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicInsert_args();
  args.topic = topic;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicInsert = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicInsert_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicInsert failed: unknown result');
};
CommonServiceClient.prototype.topicUpdate = function(topic, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicUpdate(topic);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicUpdate(topic);
  }
};

CommonServiceClient.prototype.send_topicUpdate = function(topic) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicUpdate', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicUpdate_args();
  args.topic = topic;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicUpdate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicUpdate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicUpdate failed: unknown result');
};
CommonServiceClient.prototype.topicRemove = function(topic, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicRemove(topic);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicRemove(topic);
  }
};

CommonServiceClient.prototype.send_topicRemove = function(topic) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicRemove', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicRemove_args();
  args.topic = topic;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicRemove = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicRemove_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicRemove failed: unknown result');
};
CommonServiceClient.prototype.topicSelect = function(abstractSql, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicSelect(abstractSql);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicSelect(abstractSql);
  }
};

CommonServiceClient.prototype.send_topicSelect = function(abstractSql) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicSelect', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicSelect_args();
  args.abstractSql = abstractSql;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicSelect = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicSelect_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.re) {
    return callback(result.re);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicSelect failed: unknown result');
};
CommonServiceClient.prototype.topicSelectNoCache = function(abstractSql, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicSelectNoCache(abstractSql);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicSelectNoCache(abstractSql);
  }
};

CommonServiceClient.prototype.send_topicSelectNoCache = function(abstractSql) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicSelectNoCache', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicSelectNoCache_args();
  args.abstractSql = abstractSql;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicSelectNoCache = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicSelectNoCache_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.re) {
    return callback(result.re);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicSelectNoCache failed: unknown result');
};
CommonServiceClient.prototype.topicBankInsert = function(topicBank, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicBankInsert(topicBank);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicBankInsert(topicBank);
  }
};

CommonServiceClient.prototype.send_topicBankInsert = function(topicBank) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicBankInsert', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicBankInsert_args();
  args.topicBank = topicBank;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicBankInsert = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicBankInsert_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicBankInsert failed: unknown result');
};
CommonServiceClient.prototype.topicBankUpdate = function(topicBank, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicBankUpdate(topicBank);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicBankUpdate(topicBank);
  }
};

CommonServiceClient.prototype.send_topicBankUpdate = function(topicBank) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicBankUpdate', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicBankUpdate_args();
  args.topicBank = topicBank;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicBankUpdate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicBankUpdate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicBankUpdate failed: unknown result');
};
CommonServiceClient.prototype.topicBankRemove = function(topicBank, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicBankRemove(topicBank);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicBankRemove(topicBank);
  }
};

CommonServiceClient.prototype.send_topicBankRemove = function(topicBank) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicBankRemove', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicBankRemove_args();
  args.topicBank = topicBank;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicBankRemove = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicBankRemove_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicBankRemove failed: unknown result');
};
CommonServiceClient.prototype.topicBankSelect = function(abstractSql, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicBankSelect(abstractSql);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicBankSelect(abstractSql);
  }
};

CommonServiceClient.prototype.send_topicBankSelect = function(abstractSql) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicBankSelect', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicBankSelect_args();
  args.abstractSql = abstractSql;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicBankSelect = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicBankSelect_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.re) {
    return callback(result.re);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicBankSelect failed: unknown result');
};
CommonServiceClient.prototype.topicBankSelectNoCache = function(abstractSql, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_topicBankSelectNoCache(abstractSql);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_topicBankSelectNoCache(abstractSql);
  }
};

CommonServiceClient.prototype.send_topicBankSelectNoCache = function(abstractSql) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('topicBankSelectNoCache', Thrift.MessageType.CALL, this.seqid());
  var args = new CommonService_topicBankSelectNoCache_args();
  args.abstractSql = abstractSql;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

CommonServiceClient.prototype.recv_topicBankSelectNoCache = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CommonService_topicBankSelectNoCache_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.re) {
    return callback(result.re);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('topicBankSelectNoCache failed: unknown result');
};
var CommonServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler;
}
;
CommonServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}
;
CommonServiceProcessor.prototype.process_topicOptionInsert = function(seqid, input, output) {
  var args = new CommonService_topicOptionInsert_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicOptionInsert.length === 1) {
    Q.fcall(this._handler.topicOptionInsert, args.topicOption)
      .then(function(result) {
        var result_obj = new CommonService_topicOptionInsert_result({success: result});
        output.writeMessageBegin("topicOptionInsert", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicOptionInsert", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicOptionInsert(args.topicOption, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CommonService_topicOptionInsert_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicOptionInsert", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicOptionInsert", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicOptionUpdate = function(seqid, input, output) {
  var args = new CommonService_topicOptionUpdate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicOptionUpdate.length === 1) {
    Q.fcall(this._handler.topicOptionUpdate, args.topicOption)
      .then(function(result) {
        var result_obj = new CommonService_topicOptionUpdate_result({success: result});
        output.writeMessageBegin("topicOptionUpdate", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicOptionUpdate", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicOptionUpdate(args.topicOption, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CommonService_topicOptionUpdate_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicOptionUpdate", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicOptionUpdate", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicOptionRemove = function(seqid, input, output) {
  var args = new CommonService_topicOptionRemove_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicOptionRemove.length === 1) {
    Q.fcall(this._handler.topicOptionRemove, args.topicOption)
      .then(function(result) {
        var result_obj = new CommonService_topicOptionRemove_result({success: result});
        output.writeMessageBegin("topicOptionRemove", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicOptionRemove", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicOptionRemove(args.topicOption, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CommonService_topicOptionRemove_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicOptionRemove", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicOptionRemove", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicOptionSelect = function(seqid, input, output) {
  var args = new CommonService_topicOptionSelect_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicOptionSelect.length === 1) {
    Q.fcall(this._handler.topicOptionSelect, args.abstractSql)
      .then(function(result) {
        var result_obj = new CommonService_topicOptionSelect_result({success: result});
        output.writeMessageBegin("topicOptionSelect", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof bean_ttypes.RequestException) {
          result = new CommonService_topicOptionSelect_result(err);
          output.writeMessageBegin("topicOptionSelect", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("topicOptionSelect", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicOptionSelect(args.abstractSql, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof bean_ttypes.RequestException) {
        result_obj = new CommonService_topicOptionSelect_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicOptionSelect", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicOptionSelect", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicOptionSelectNoCache = function(seqid, input, output) {
  var args = new CommonService_topicOptionSelectNoCache_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicOptionSelectNoCache.length === 1) {
    Q.fcall(this._handler.topicOptionSelectNoCache, args.abstractSql)
      .then(function(result) {
        var result_obj = new CommonService_topicOptionSelectNoCache_result({success: result});
        output.writeMessageBegin("topicOptionSelectNoCache", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof bean_ttypes.RequestException) {
          result = new CommonService_topicOptionSelectNoCache_result(err);
          output.writeMessageBegin("topicOptionSelectNoCache", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("topicOptionSelectNoCache", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicOptionSelectNoCache(args.abstractSql, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof bean_ttypes.RequestException) {
        result_obj = new CommonService_topicOptionSelectNoCache_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicOptionSelectNoCache", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicOptionSelectNoCache", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicInsert = function(seqid, input, output) {
  var args = new CommonService_topicInsert_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicInsert.length === 1) {
    Q.fcall(this._handler.topicInsert, args.topic)
      .then(function(result) {
        var result_obj = new CommonService_topicInsert_result({success: result});
        output.writeMessageBegin("topicInsert", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicInsert", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicInsert(args.topic, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CommonService_topicInsert_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicInsert", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicInsert", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicUpdate = function(seqid, input, output) {
  var args = new CommonService_topicUpdate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicUpdate.length === 1) {
    Q.fcall(this._handler.topicUpdate, args.topic)
      .then(function(result) {
        var result_obj = new CommonService_topicUpdate_result({success: result});
        output.writeMessageBegin("topicUpdate", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicUpdate", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicUpdate(args.topic, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CommonService_topicUpdate_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicUpdate", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicUpdate", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicRemove = function(seqid, input, output) {
  var args = new CommonService_topicRemove_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicRemove.length === 1) {
    Q.fcall(this._handler.topicRemove, args.topic)
      .then(function(result) {
        var result_obj = new CommonService_topicRemove_result({success: result});
        output.writeMessageBegin("topicRemove", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicRemove", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicRemove(args.topic, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CommonService_topicRemove_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicRemove", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicRemove", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicSelect = function(seqid, input, output) {
  var args = new CommonService_topicSelect_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicSelect.length === 1) {
    Q.fcall(this._handler.topicSelect, args.abstractSql)
      .then(function(result) {
        var result_obj = new CommonService_topicSelect_result({success: result});
        output.writeMessageBegin("topicSelect", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof bean_ttypes.RequestException) {
          result = new CommonService_topicSelect_result(err);
          output.writeMessageBegin("topicSelect", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("topicSelect", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicSelect(args.abstractSql, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof bean_ttypes.RequestException) {
        result_obj = new CommonService_topicSelect_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicSelect", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicSelect", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicSelectNoCache = function(seqid, input, output) {
  var args = new CommonService_topicSelectNoCache_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicSelectNoCache.length === 1) {
    Q.fcall(this._handler.topicSelectNoCache, args.abstractSql)
      .then(function(result) {
        var result_obj = new CommonService_topicSelectNoCache_result({success: result});
        output.writeMessageBegin("topicSelectNoCache", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof bean_ttypes.RequestException) {
          result = new CommonService_topicSelectNoCache_result(err);
          output.writeMessageBegin("topicSelectNoCache", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("topicSelectNoCache", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicSelectNoCache(args.abstractSql, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof bean_ttypes.RequestException) {
        result_obj = new CommonService_topicSelectNoCache_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicSelectNoCache", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicSelectNoCache", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicBankInsert = function(seqid, input, output) {
  var args = new CommonService_topicBankInsert_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicBankInsert.length === 1) {
    Q.fcall(this._handler.topicBankInsert, args.topicBank)
      .then(function(result) {
        var result_obj = new CommonService_topicBankInsert_result({success: result});
        output.writeMessageBegin("topicBankInsert", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicBankInsert", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicBankInsert(args.topicBank, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CommonService_topicBankInsert_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicBankInsert", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicBankInsert", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicBankUpdate = function(seqid, input, output) {
  var args = new CommonService_topicBankUpdate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicBankUpdate.length === 1) {
    Q.fcall(this._handler.topicBankUpdate, args.topicBank)
      .then(function(result) {
        var result_obj = new CommonService_topicBankUpdate_result({success: result});
        output.writeMessageBegin("topicBankUpdate", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicBankUpdate", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicBankUpdate(args.topicBank, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CommonService_topicBankUpdate_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicBankUpdate", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicBankUpdate", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicBankRemove = function(seqid, input, output) {
  var args = new CommonService_topicBankRemove_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicBankRemove.length === 1) {
    Q.fcall(this._handler.topicBankRemove, args.topicBank)
      .then(function(result) {
        var result_obj = new CommonService_topicBankRemove_result({success: result});
        output.writeMessageBegin("topicBankRemove", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicBankRemove", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicBankRemove(args.topicBank, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CommonService_topicBankRemove_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicBankRemove", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicBankRemove", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicBankSelect = function(seqid, input, output) {
  var args = new CommonService_topicBankSelect_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicBankSelect.length === 1) {
    Q.fcall(this._handler.topicBankSelect, args.abstractSql)
      .then(function(result) {
        var result_obj = new CommonService_topicBankSelect_result({success: result});
        output.writeMessageBegin("topicBankSelect", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof bean_ttypes.RequestException) {
          result = new CommonService_topicBankSelect_result(err);
          output.writeMessageBegin("topicBankSelect", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("topicBankSelect", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicBankSelect(args.abstractSql, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof bean_ttypes.RequestException) {
        result_obj = new CommonService_topicBankSelect_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicBankSelect", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicBankSelect", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CommonServiceProcessor.prototype.process_topicBankSelectNoCache = function(seqid, input, output) {
  var args = new CommonService_topicBankSelectNoCache_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.topicBankSelectNoCache.length === 1) {
    Q.fcall(this._handler.topicBankSelectNoCache, args.abstractSql)
      .then(function(result) {
        var result_obj = new CommonService_topicBankSelectNoCache_result({success: result});
        output.writeMessageBegin("topicBankSelectNoCache", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof bean_ttypes.RequestException) {
          result = new CommonService_topicBankSelectNoCache_result(err);
          output.writeMessageBegin("topicBankSelectNoCache", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("topicBankSelectNoCache", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.topicBankSelectNoCache(args.abstractSql, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof bean_ttypes.RequestException) {
        result_obj = new CommonService_topicBankSelectNoCache_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("topicBankSelectNoCache", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("topicBankSelectNoCache", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
