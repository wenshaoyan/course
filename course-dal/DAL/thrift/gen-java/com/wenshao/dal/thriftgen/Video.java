/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.wenshao.dal.thriftgen;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-10-22")
public class Video implements org.apache.thrift.TBase<Video, Video._Fields>, java.io.Serializable, Cloneable, Comparable<Video> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Video");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField RESOURCE_PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("resource_path", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField RESOURCE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("resource_time", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField LOCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("location", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField COURSE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("course_id", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField PLAY_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("play_number", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new VideoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new VideoTupleSchemeFactory();

  public java.lang.String id; // required
  public java.lang.String title; // required
  public java.lang.String resource_path; // required
  public int resource_time; // required
  public int location; // required
  public int course_id; // required
  public int status; // required
  public int play_number; // required
  public java.lang.String create_time; // required
  public java.lang.String update_time; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    TITLE((short)2, "title"),
    RESOURCE_PATH((short)3, "resource_path"),
    RESOURCE_TIME((short)4, "resource_time"),
    LOCATION((short)5, "location"),
    COURSE_ID((short)6, "course_id"),
    STATUS((short)7, "status"),
    PLAY_NUMBER((short)8, "play_number"),
    CREATE_TIME((short)9, "create_time"),
    UPDATE_TIME((short)10, "update_time");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // TITLE
          return TITLE;
        case 3: // RESOURCE_PATH
          return RESOURCE_PATH;
        case 4: // RESOURCE_TIME
          return RESOURCE_TIME;
        case 5: // LOCATION
          return LOCATION;
        case 6: // COURSE_ID
          return COURSE_ID;
        case 7: // STATUS
          return STATUS;
        case 8: // PLAY_NUMBER
          return PLAY_NUMBER;
        case 9: // CREATE_TIME
          return CREATE_TIME;
        case 10: // UPDATE_TIME
          return UPDATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RESOURCE_TIME_ISSET_ID = 0;
  private static final int __LOCATION_ISSET_ID = 1;
  private static final int __COURSE_ID_ISSET_ID = 2;
  private static final int __STATUS_ISSET_ID = 3;
  private static final int __PLAY_NUMBER_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESOURCE_PATH, new org.apache.thrift.meta_data.FieldMetaData("resource_path", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESOURCE_TIME, new org.apache.thrift.meta_data.FieldMetaData("resource_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOCATION, new org.apache.thrift.meta_data.FieldMetaData("location", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COURSE_ID, new org.apache.thrift.meta_data.FieldMetaData("course_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PLAY_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("play_number", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Video.class, metaDataMap);
  }

  public Video() {
  }

  public Video(
    java.lang.String id,
    java.lang.String title,
    java.lang.String resource_path,
    int resource_time,
    int location,
    int course_id,
    int status,
    int play_number,
    java.lang.String create_time,
    java.lang.String update_time)
  {
    this();
    this.id = id;
    this.title = title;
    this.resource_path = resource_path;
    this.resource_time = resource_time;
    setResource_timeIsSet(true);
    this.location = location;
    setLocationIsSet(true);
    this.course_id = course_id;
    setCourse_idIsSet(true);
    this.status = status;
    setStatusIsSet(true);
    this.play_number = play_number;
    setPlay_numberIsSet(true);
    this.create_time = create_time;
    this.update_time = update_time;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Video(Video other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetResource_path()) {
      this.resource_path = other.resource_path;
    }
    this.resource_time = other.resource_time;
    this.location = other.location;
    this.course_id = other.course_id;
    this.status = other.status;
    this.play_number = other.play_number;
    if (other.isSetCreate_time()) {
      this.create_time = other.create_time;
    }
    if (other.isSetUpdate_time()) {
      this.update_time = other.update_time;
    }
  }

  public Video deepCopy() {
    return new Video(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.title = null;
    this.resource_path = null;
    setResource_timeIsSet(false);
    this.resource_time = 0;
    setLocationIsSet(false);
    this.location = 0;
    setCourse_idIsSet(false);
    this.course_id = 0;
    setStatusIsSet(false);
    this.status = 0;
    setPlay_numberIsSet(false);
    this.play_number = 0;
    this.create_time = null;
    this.update_time = null;
  }

  public java.lang.String getId() {
    return this.id;
  }

  public Video setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public java.lang.String getTitle() {
    return this.title;
  }

  public Video setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public java.lang.String getResource_path() {
    return this.resource_path;
  }

  public Video setResource_path(java.lang.String resource_path) {
    this.resource_path = resource_path;
    return this;
  }

  public void unsetResource_path() {
    this.resource_path = null;
  }

  /** Returns true if field resource_path is set (has been assigned a value) and false otherwise */
  public boolean isSetResource_path() {
    return this.resource_path != null;
  }

  public void setResource_pathIsSet(boolean value) {
    if (!value) {
      this.resource_path = null;
    }
  }

  public int getResource_time() {
    return this.resource_time;
  }

  public Video setResource_time(int resource_time) {
    this.resource_time = resource_time;
    setResource_timeIsSet(true);
    return this;
  }

  public void unsetResource_time() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RESOURCE_TIME_ISSET_ID);
  }

  /** Returns true if field resource_time is set (has been assigned a value) and false otherwise */
  public boolean isSetResource_time() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RESOURCE_TIME_ISSET_ID);
  }

  public void setResource_timeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RESOURCE_TIME_ISSET_ID, value);
  }

  public int getLocation() {
    return this.location;
  }

  public Video setLocation(int location) {
    this.location = location;
    setLocationIsSet(true);
    return this;
  }

  public void unsetLocation() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LOCATION_ISSET_ID);
  }

  /** Returns true if field location is set (has been assigned a value) and false otherwise */
  public boolean isSetLocation() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LOCATION_ISSET_ID);
  }

  public void setLocationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LOCATION_ISSET_ID, value);
  }

  public int getCourse_id() {
    return this.course_id;
  }

  public Video setCourse_id(int course_id) {
    this.course_id = course_id;
    setCourse_idIsSet(true);
    return this;
  }

  public void unsetCourse_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COURSE_ID_ISSET_ID);
  }

  /** Returns true if field course_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCourse_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COURSE_ID_ISSET_ID);
  }

  public void setCourse_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COURSE_ID_ISSET_ID, value);
  }

  public int getStatus() {
    return this.status;
  }

  public Video setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public int getPlay_number() {
    return this.play_number;
  }

  public Video setPlay_number(int play_number) {
    this.play_number = play_number;
    setPlay_numberIsSet(true);
    return this;
  }

  public void unsetPlay_number() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PLAY_NUMBER_ISSET_ID);
  }

  /** Returns true if field play_number is set (has been assigned a value) and false otherwise */
  public boolean isSetPlay_number() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PLAY_NUMBER_ISSET_ID);
  }

  public void setPlay_numberIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PLAY_NUMBER_ISSET_ID, value);
  }

  public java.lang.String getCreate_time() {
    return this.create_time;
  }

  public Video setCreate_time(java.lang.String create_time) {
    this.create_time = create_time;
    return this;
  }

  public void unsetCreate_time() {
    this.create_time = null;
  }

  /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_time() {
    return this.create_time != null;
  }

  public void setCreate_timeIsSet(boolean value) {
    if (!value) {
      this.create_time = null;
    }
  }

  public java.lang.String getUpdate_time() {
    return this.update_time;
  }

  public Video setUpdate_time(java.lang.String update_time) {
    this.update_time = update_time;
    return this;
  }

  public void unsetUpdate_time() {
    this.update_time = null;
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return this.update_time != null;
  }

  public void setUpdate_timeIsSet(boolean value) {
    if (!value) {
      this.update_time = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((java.lang.String)value);
      }
      break;

    case RESOURCE_PATH:
      if (value == null) {
        unsetResource_path();
      } else {
        setResource_path((java.lang.String)value);
      }
      break;

    case RESOURCE_TIME:
      if (value == null) {
        unsetResource_time();
      } else {
        setResource_time((java.lang.Integer)value);
      }
      break;

    case LOCATION:
      if (value == null) {
        unsetLocation();
      } else {
        setLocation((java.lang.Integer)value);
      }
      break;

    case COURSE_ID:
      if (value == null) {
        unsetCourse_id();
      } else {
        setCourse_id((java.lang.Integer)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((java.lang.Integer)value);
      }
      break;

    case PLAY_NUMBER:
      if (value == null) {
        unsetPlay_number();
      } else {
        setPlay_number((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreate_time();
      } else {
        setCreate_time((java.lang.String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdate_time();
      } else {
        setUpdate_time((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case TITLE:
      return getTitle();

    case RESOURCE_PATH:
      return getResource_path();

    case RESOURCE_TIME:
      return getResource_time();

    case LOCATION:
      return getLocation();

    case COURSE_ID:
      return getCourse_id();

    case STATUS:
      return getStatus();

    case PLAY_NUMBER:
      return getPlay_number();

    case CREATE_TIME:
      return getCreate_time();

    case UPDATE_TIME:
      return getUpdate_time();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case TITLE:
      return isSetTitle();
    case RESOURCE_PATH:
      return isSetResource_path();
    case RESOURCE_TIME:
      return isSetResource_time();
    case LOCATION:
      return isSetLocation();
    case COURSE_ID:
      return isSetCourse_id();
    case STATUS:
      return isSetStatus();
    case PLAY_NUMBER:
      return isSetPlay_number();
    case CREATE_TIME:
      return isSetCreate_time();
    case UPDATE_TIME:
      return isSetUpdate_time();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Video)
      return this.equals((Video)that);
    return false;
  }

  public boolean equals(Video that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_resource_path = true && this.isSetResource_path();
    boolean that_present_resource_path = true && that.isSetResource_path();
    if (this_present_resource_path || that_present_resource_path) {
      if (!(this_present_resource_path && that_present_resource_path))
        return false;
      if (!this.resource_path.equals(that.resource_path))
        return false;
    }

    boolean this_present_resource_time = true;
    boolean that_present_resource_time = true;
    if (this_present_resource_time || that_present_resource_time) {
      if (!(this_present_resource_time && that_present_resource_time))
        return false;
      if (this.resource_time != that.resource_time)
        return false;
    }

    boolean this_present_location = true;
    boolean that_present_location = true;
    if (this_present_location || that_present_location) {
      if (!(this_present_location && that_present_location))
        return false;
      if (this.location != that.location)
        return false;
    }

    boolean this_present_course_id = true;
    boolean that_present_course_id = true;
    if (this_present_course_id || that_present_course_id) {
      if (!(this_present_course_id && that_present_course_id))
        return false;
      if (this.course_id != that.course_id)
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_play_number = true;
    boolean that_present_play_number = true;
    if (this_present_play_number || that_present_play_number) {
      if (!(this_present_play_number && that_present_play_number))
        return false;
      if (this.play_number != that.play_number)
        return false;
    }

    boolean this_present_create_time = true && this.isSetCreate_time();
    boolean that_present_create_time = true && that.isSetCreate_time();
    if (this_present_create_time || that_present_create_time) {
      if (!(this_present_create_time && that_present_create_time))
        return false;
      if (!this.create_time.equals(that.create_time))
        return false;
    }

    boolean this_present_update_time = true && this.isSetUpdate_time();
    boolean that_present_update_time = true && that.isSetUpdate_time();
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (!this.update_time.equals(that.update_time))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetTitle()) ? 131071 : 524287);
    if (isSetTitle())
      hashCode = hashCode * 8191 + title.hashCode();

    hashCode = hashCode * 8191 + ((isSetResource_path()) ? 131071 : 524287);
    if (isSetResource_path())
      hashCode = hashCode * 8191 + resource_path.hashCode();

    hashCode = hashCode * 8191 + resource_time;

    hashCode = hashCode * 8191 + location;

    hashCode = hashCode * 8191 + course_id;

    hashCode = hashCode * 8191 + status;

    hashCode = hashCode * 8191 + play_number;

    hashCode = hashCode * 8191 + ((isSetCreate_time()) ? 131071 : 524287);
    if (isSetCreate_time())
      hashCode = hashCode * 8191 + create_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdate_time()) ? 131071 : 524287);
    if (isSetUpdate_time())
      hashCode = hashCode * 8191 + update_time.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Video other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetResource_path()).compareTo(other.isSetResource_path());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResource_path()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resource_path, other.resource_path);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetResource_time()).compareTo(other.isSetResource_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResource_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resource_time, other.resource_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLocation()).compareTo(other.isSetLocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.location, other.location);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCourse_id()).compareTo(other.isSetCourse_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCourse_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.course_id, other.course_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPlay_number()).compareTo(other.isSetPlay_number());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlay_number()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.play_number, other.play_number);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Video(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resource_path:");
    if (this.resource_path == null) {
      sb.append("null");
    } else {
      sb.append(this.resource_path);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resource_time:");
    sb.append(this.resource_time);
    first = false;
    if (!first) sb.append(", ");
    sb.append("location:");
    sb.append(this.location);
    first = false;
    if (!first) sb.append(", ");
    sb.append("course_id:");
    sb.append(this.course_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("play_number:");
    sb.append(this.play_number);
    first = false;
    if (!first) sb.append(", ");
    sb.append("create_time:");
    if (this.create_time == null) {
      sb.append("null");
    } else {
      sb.append(this.create_time);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("update_time:");
    if (this.update_time == null) {
      sb.append("null");
    } else {
      sb.append(this.update_time);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class VideoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public VideoStandardScheme getScheme() {
      return new VideoStandardScheme();
    }
  }

  private static class VideoStandardScheme extends org.apache.thrift.scheme.StandardScheme<Video> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Video struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // RESOURCE_PATH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resource_path = iprot.readString();
              struct.setResource_pathIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RESOURCE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.resource_time = iprot.readI32();
              struct.setResource_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LOCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.location = iprot.readI32();
              struct.setLocationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // COURSE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.course_id = iprot.readI32();
              struct.setCourse_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PLAY_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.play_number = iprot.readI32();
              struct.setPlay_numberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.create_time = iprot.readString();
              struct.setCreate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.update_time = iprot.readString();
              struct.setUpdate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Video struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.resource_path != null) {
        oprot.writeFieldBegin(RESOURCE_PATH_FIELD_DESC);
        oprot.writeString(struct.resource_path);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RESOURCE_TIME_FIELD_DESC);
      oprot.writeI32(struct.resource_time);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOCATION_FIELD_DESC);
      oprot.writeI32(struct.location);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COURSE_ID_FIELD_DESC);
      oprot.writeI32(struct.course_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PLAY_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.play_number);
      oprot.writeFieldEnd();
      if (struct.create_time != null) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeString(struct.create_time);
        oprot.writeFieldEnd();
      }
      if (struct.update_time != null) {
        oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
        oprot.writeString(struct.update_time);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class VideoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public VideoTupleScheme getScheme() {
      return new VideoTupleScheme();
    }
  }

  private static class VideoTupleScheme extends org.apache.thrift.scheme.TupleScheme<Video> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Video struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetTitle()) {
        optionals.set(1);
      }
      if (struct.isSetResource_path()) {
        optionals.set(2);
      }
      if (struct.isSetResource_time()) {
        optionals.set(3);
      }
      if (struct.isSetLocation()) {
        optionals.set(4);
      }
      if (struct.isSetCourse_id()) {
        optionals.set(5);
      }
      if (struct.isSetStatus()) {
        optionals.set(6);
      }
      if (struct.isSetPlay_number()) {
        optionals.set(7);
      }
      if (struct.isSetCreate_time()) {
        optionals.set(8);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetResource_path()) {
        oprot.writeString(struct.resource_path);
      }
      if (struct.isSetResource_time()) {
        oprot.writeI32(struct.resource_time);
      }
      if (struct.isSetLocation()) {
        oprot.writeI32(struct.location);
      }
      if (struct.isSetCourse_id()) {
        oprot.writeI32(struct.course_id);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetPlay_number()) {
        oprot.writeI32(struct.play_number);
      }
      if (struct.isSetCreate_time()) {
        oprot.writeString(struct.create_time);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeString(struct.update_time);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Video struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(2)) {
        struct.resource_path = iprot.readString();
        struct.setResource_pathIsSet(true);
      }
      if (incoming.get(3)) {
        struct.resource_time = iprot.readI32();
        struct.setResource_timeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.location = iprot.readI32();
        struct.setLocationIsSet(true);
      }
      if (incoming.get(5)) {
        struct.course_id = iprot.readI32();
        struct.setCourse_idIsSet(true);
      }
      if (incoming.get(6)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(7)) {
        struct.play_number = iprot.readI32();
        struct.setPlay_numberIsSet(true);
      }
      if (incoming.get(8)) {
        struct.create_time = iprot.readString();
        struct.setCreate_timeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.update_time = iprot.readString();
        struct.setUpdate_timeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

